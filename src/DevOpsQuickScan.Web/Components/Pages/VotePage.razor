@page "/vote/{SessionId}/{UserName}"
@using DevOpsQuickScan.Web.Components.CustomComponents
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<div class="quickscan-card quickscan-card-wide">
    <p>Voting session name: <strong>@_sessionName</strong></p>

    @if (!string.IsNullOrEmpty(_currentQuestion?.Text))
    {
        <QuestionComponent CurrentQuestion="_currentQuestion" />
        
        <div class="question-container">
            <p class="question-text">@_currentQuestion.Text</p>

            <div class="answers-container mt-3">
                @foreach (var answer in _currentQuestion.Answers)
                {
                    <button class="btn btn-outline-primary w-100 mb-2"
                            @onclick="() => SelectAnswer(answer.Id)">
                        @answer.Text
                    </button>
                }
            </div>

            <div class="vote-controls mt-4">
                <button class="btn btn-primary w-100" @onclick="SubmitVote" disabled="@(!_isAnswerSelected)">
                    Vote
                </button>
            </div>
        </div>
    }
    else
    {
        <p class="text-muted">Waiting for the next question...</p>
    }
    
    
    
    @* <PieChart @ref="pieChart" Width="500" /> *@
    @* *@
    @* <div class="mt-5"> *@
    @*     <Button Type="ButtonType.Button" Color="ButtonColor.Primary" Size="ButtonSize.Small" @onclick="async () => await RandomizeAsync()"> Randomize </Button> *@
    @*     <Button Type="ButtonType.Button" Color="ButtonColor.Primary" Size="ButtonSize.Small" @onclick="async () => await AddDatasetAsync()"> Add Dataset </Button> *@
    @*     <Button Type="ButtonType.Button" Color="ButtonColor.Primary" Size="ButtonSize.Small" @onclick="async () => await AddDataAsync()">Add Data</Button> *@
    @* </div> *@
</div>
